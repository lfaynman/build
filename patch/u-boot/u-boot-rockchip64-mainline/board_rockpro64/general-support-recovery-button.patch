From ff72515d3f6e65e22baa8cb1fbefe15540256310 Mon Sep 17 00:00:00 2001
From: Piotr Szczepanik <piter75@gmail.com>
Date: Sun, 4 Oct 2020 18:19:02 +0200
Subject: [PATCH] Enabled advanced recovery button support for rockchip

It allows to enter either ums, fastboot or rockusb based on the time the
button is pressed.
SD (mmc0) is preferred if present with eMMC (mmc1) set as fallback.

Based on:
  https://github.com/ayufan-rock64/linux-u-boot/commit/ea6efecdfecc57c853a6f32f78469d1b2417329b
  https://github.com/ayufan-rock64/linux-u-boot/commit/1abc9ab51306200880c434c2069eceb4be7789e9

Signed-off-by: Piotr Szczepanik <piter75@gmail.com>

diff --git a/arch/arm/mach-rockchip/boot_mode.c b/arch/arm/mach-rockchip/boot_mode.c
index 21589341..4fb6d3ae 100644
--- a/arch/arm/mach-rockchip/boot_mode.c
+++ b/arch/arm/mach-rockchip/boot_mode.c
@@ -8,6 +8,7 @@
 #include <command.h>
 #include <env.h>
 #include <log.h>
+#include <linux/delay.h>
 #include <asm/io.h>
 #include <asm/arch-rockchip/boot_mode.h>
 #include <dm/device.h>
@@ -70,13 +71,92 @@ __weak int rockchip_dnl_key_pressed(void)
 		return false;
 }
 
+int rockchip_dnl_mode(int num_modes)
+{
+	int mode = 0;
+	const char *mode_names[5] = {
+		"none",
+		"ums",
+		"fastboot",
+		"rockusb",
+		"maskrom"
+	};
+
+
+	while(mode < num_modes) {
+		++mode;
+
+		printf("rockchip_dnl_mode = %s mode\n", mode_names[mode]);
+
+		// return early
+ 		if (mode == num_modes) {
+ 			goto end;
+ 		}
+
+		// wait 2 seconds
+		for (int i = 0; i < 100; ++i) {
+			if (!rockchip_dnl_key_pressed()) {
+				goto end;
+			}
+			mdelay(20);
+		}
+	}
+
+end:
+	return mode;
+}
+
 void rockchip_dnl_mode_check(void)
 {
-	if (rockchip_dnl_key_pressed()) {
-		printf("download key pressed, entering download mode...");
-		set_back_to_bootrom_dnl_flag();
-		do_reset(NULL, 0, 0, NULL);
+	int mmc_device = 0;
+	int ret = 0;
+	char cmd[32];
+
+	if (!rockchip_dnl_key_pressed()) {
+		return 0;
+	}
+
+	;
+	if (cli_simple_run_command("mmc dev 1") >= 0) {
+		mmc_device = 1;
+	} else if (cli_simple_run_command("mmc dev 1") >= 0) {
+		mmc_device = 0;
+	} else {
+		printf("no mmc device suitable for download mode!\n");
+		return 0;
 	}
+
+	printf("using mmc%d device for download mode\n", mmc_device);
+
+	switch(rockchip_dnl_mode(4)) {
+	case 0:
+		return;
+
+	case 1:
+		printf("entering ums mode...\n");
+		sprintf(cmd, "ums 0 mmc %d", mmc_device);
+		cli_simple_run_command(cmd, 0);
+		break;
+
+	case 2:
+		printf("entering fastboot mode...\n");
+		sprintf(cmd, "mmc dev %d; fastboot usb 0", mmc_device);
+		cli_simple_run_command(cmd, 0);
+		break;
+
+	case 3:
+		printf("entering download mode...\n");
+		sprintf(cmd, "rockusb 0 mmc %d", mmc_device);
+		cli_simple_run_command(cmd, 0);
+		break;
+
+	case 4:
+		printf("entering maskrom mode...\n");
+		break;
+	}
+
+	set_back_to_bootrom_dnl_flag();
+	do_reset(NULL, 0, 0, NULL);
 }
 
 int setup_boot_mode(void)
